@model VaultLifeAdmin.ViewModels.GameAdminViewModel

@{
    ViewBag.Title = "Create";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductInGame</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProductInGames.ProductID, "ProductID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductInGames.ProductID, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.ProductInGames.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductInGames.Quantity,null,"Quantity", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("QuantityError", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductInGames.PriceInGame,"PriceInGame", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductInGames.PriceInGame,null,"PriceInGame", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("PriceInGameError", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductInGames.ReferencePrice,  htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductInGames.ReferencePrice,null, "ReferencePrice", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("ReferencePriceError", "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ProductInGames.CurrencyID, "CurrencyID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CurrencyID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductInGames.CurrencyID, "", new { @class = "text-danger" })
            </div>
        </div>

      

       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="prev" name="prevBtn" class="btn btn-default" />
                &nbsp; <input type="submit" value="Next" name="nextBtn" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
