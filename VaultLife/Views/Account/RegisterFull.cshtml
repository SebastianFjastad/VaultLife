@model Vaultlife.ViewModels.AccountViewModel
@{ViewBag.Title = "Sign Up"; }
@Html.Partial("_FacebookPartial")
<div class="container body-content">
    @{
        ViewBag.Title = "Register";
    }
    <!--<h2>@ViewBag.Title.</h2>-->
    @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-md-12 text-center">
                <h2>
                    <small class="center-block">or</small> Sign up with your email
                </h2>
                @*@Html.ValidationSummary("", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-layout">
                    <div class="form-row hidden">
                        <div class="form-label">
                            <span class="required">*</span> Identity Type
                        </div>

                        <div class="form-field">
                        </div>

                    </div>
                    @*Html.Hidden("MemberSubscriptionType", "1")*@
                    <div class="form-row">
                        <div class="form-label">
                            <span class="required">*</span> Member Subscription Type
                        </div>
                        <div class="form-field">
                            @*Html.LabelFor(model => model.MemberSubscriptionTypeID, htmlAttributes: new { @class = "control-label col-md-2" })*@

                            @Html.DropDownList("MemberSubscriptionType", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MemberSubscriptionType, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="form-label">
                            <span class="required">*</span> Country
                        </div>
                        <div class="form-field">
                            @*@Html.LabelFor(model => model.Countries, htmlAttributes: new { @class = "control-label col-md-2" })*@
                          
                            @Html.DropDownList("Country", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CountryID, "", new { @class = "text-danger" })
                        </div>
                        
                    </div>
                    <div class="form-row" id="StateBlock">
                        <div class="form-label">
                            <span class="required">*</span> <span id="state-province">State/Province</span>
                        </div>
                        <div class="form-field">
                            @Html.DropDownList("State", null, "NA", htmlAttributes: new { @class = "form-control"})
                            @Html.ValidationMessageFor(m => m.StateID, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-row" id="CityBlock">
                        <div class="form-label">
                            <span class="required">*</span> <span id="state-province">City</span>
                        </div>
                        <div class="form-field">
                            @Html.DropDownList("City", null, "NA", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.CityID, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-label">
                            <span class="required">*</span> First Name
                        </div>
                        <div class="form-field">
                            @*<input type="text" placeholder="Your First Name" class="form-control" />*@
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-label">
                            <span class="required">*</span> Last Name
                        </div>
                        <div class="form-field">
                            @*<input type="text" placeholder="Your Surname" class="form-control" />*@
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-label">
                          <!--  <span class="required">*</span>--> Mobile Number
                        </div>
                        <div class="form-field">
                            @*<input type="text" placeholder="E.g. +27 123 456 7890" class="form-control" />*@
                            @Html.TextBoxFor(m => m.MobileNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MobileNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

            </div>
            <div class="col-md-6">
                <div class="form-layout">
                    <div class="form-row">
                        <div class="form-label">
                            <span class="required">*</span> Email
                        </div>
                        <div class="form-field">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-label">
                            <span class="required">*</span> Password
                        </div>
                        <div class="form-field">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("CustomPassword", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-label">
                            <span class="required">*</span> Confirm Password
                        </div>
                        <div class="form-field">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-label">
                            Promo Code
                        </div>
                        <div class="form-field">
                            @Html.TextBoxFor(m => m.PromoCode, new { @class = "form-control",  data_val = "false"})
                            @Html.ValidationMessageFor(m => m.PromoCode, "", new { @class = "text-danger" }) 

                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-label" id="tncError">
                            <span class="required">*</span> &nbsp;
                        </div>
                        <div class="form-field">
                            <label class="checkbox-block">
                                @*<input type="checkbox" id="tnc" name="tnc" /> Accept <a href="#" target="_blank">terms of use and privacy policy</a>*@
                                @Html.CheckBoxFor(m => m.TermsAndConditions)
                                Accept <a href="#" target="_blank">terms of use and privacy policy</a>
                                @Html.ValidationMessageFor(model => model.TermsAndConditions, "", new { @class = "text-danger" })
                               
                            </label>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="row">
            <div class="col-md-12 text-center">
                <input type="submit" id="sbnt" value="Sign Me Up" class="btn btn-lg btn-primary" />
                <br /><br />
            </div>
        </div>
    }
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">

            $(document).ready(function () {
                //$('#StateBlock').hide();
               $('#CityBlock').hide();
              
                $('#Country')
                  .val('192').attr('selected', 'selected');
                var fd = $('#Country').serialize();
                $('#State')
                    .find('option')
                    .remove()
                    .end()
                    .append('<option value="">Pick a province</option>')
                    .val('').attr('selected', 'selected');
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("getStates")',
                    data: $('form').serialize(),
                    success: function (result) {
                        if (result.length > 0) {
                            $('#StateBlock').show();
                            for (var key in result) {
                                var value = result[key];
                                $('#State')
                                    .append('<option value="' + value.StateID + '">' + value.StateName + '</option>');
                                //  .val('' + value.StateID + '');
                            }
                        }
                        else { $('#StateBlock').hide(); }
                    }

                });

                $('#clickme').click(function () {

                    $.ajax({
                        //type: "POST",
                        url: '@Url.Action("Count")',
                        data: $('form').serialize(),
                        success: function (response) {
                            $("#result").html(response);
                        }
                    });
                });
                $('#Save').click(function () {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Insert")',
                        data: $('form').serialize(),
                        success: function (response) {
                            $("#result").html(response);
                        }
                    });
                });

                $('#Country').change(function () {
                    var fd= $('#Country').serialize();
                    $('#State')
                        .find('option')
                        .remove()
                        .end();
                    $('#City')
                        .find('option')
                        .remove()
                        .end();

                      $.ajax({
                        type: "POST",
                        url: '@Url.Action("getStates")',
                        data: $('form').serialize(),
                        success: function (result) {
                            if (result.length > 0) {
                                $('#StateBlock').show();
                                $('#State').append('<option value="">Pick a state or province</option>');
                                for (var key in result) {
                                    var value = result[key];
                                    $('#State')
                                        
                                        .append('<option value="' + value.StateID + '">' + value.StateName + '</option>');
                                      //  .val('' + value.StateID + '');
                                }
                            }
                            else { $('#StateBlock').hide(); }
                        }

                    });
                });

                $('#State').change(function () {
                    var fd = $('#State').serialize();
                    $('#City')
                        .find('option')
                        .remove()
                        .end();
                      
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("getCities")',
                        data: $('form').serialize(),
                        success: function (result) {
                            if (result.length > 0) {
                                $('#CityBlock').show();
                                for (var key in result) {
                                    var value = result[key];
                                    $('#City')
                                        .append('<option value="' + value.CityID + '">' + value.CityName + '</option>');
                                     //   .val('' + value.CityID + '');
                                }
                            }
                            else { $('#CityBlock').hide(); }
                        }

                    });
                });
            });
        </script>
    <script type="text/javascript" language="JavaScript">
    if (jQuery.validator) {
        // Checkbox Validation
        jQuery.validator.addMethod("checkrequired", function (value, element, params) {
            var checked = false;
            checked = $(element).is(':checked');
            return checked;
        }, '');
        if (jQuery.validator.unobtrusive) {
            jQuery.validator.unobtrusive.adapters.addBool("checkrequired");
        }
    }
    </script>
    
        }

</div>
